{"version":3,"sources":["./src/app/pages/community/community-modal/community-modal.component.ts","./src/app/pages/community/community-routing.module.ts","./src/app/pages/community/community.module.ts","./src/app/pages/community/community/community.component.ts","./src/app/pages/community/community/community.component.html","./src/app/pages/community/containers/dashboard-page/dashboard-page.component.ts"],"names":[],"mappings":"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","file":"pages-community-community-module-es2015.js","sourcesContent":["\nimport { Component, OnInit, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { DataService } from '../../../services/data.service';\nimport { environment } from '../.../../../../../environments/environment';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'fp-community-modal',\n  templateUrl: './community-modal.component.html',\n  styleUrls: ['./community-modal.component.scss']\n})\nexport class CommunityModalComponent implements OnInit {\n\n  communityData = {\n    community_location: \"aa\",\n    community_name: \"aa\",\n    status: \"\"\n  };\n  \n  constructor(\n    public dialogRef: MatDialogRef<CommunityModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,private dataService:DataService) {\n      this.communityData = data;\n    }\n\n  ngOnInit(): void {\n    \n  }\n\n  onNoClick(): void {\n    \n    let url = environment.builderBaseUrl+\"community/create-community\";\n    this.dataService.addCommunity(url,this.communityData).subscribe(result => {\n      console.log(\"result....\",result);\n    });\n    this.dialogRef.close();\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CommunityComponent } from './community/community.component';\nimport { DashboardPageComponent } from './containers/dashboard-page/dashboard-page.component'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardPageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CommunityRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CommunityRoutingModule } from './community-routing.module';\nimport { CommunityComponent } from './community/community.component';\n\nimport { CommunityModalComponent } from './community-modal/community-modal.component'\nimport { DashboardPageComponent } from './containers/dashboard-page/dashboard-page.component'\n\n@NgModule({\n  declarations: [CommunityComponent,DashboardPageComponent],\n  imports: [\n    CommonModule,\n    CommunityRoutingModule,\n  ],\nentryComponents:[CommunityModalComponent],\n\n})\nexport class CommunityModule { }\n","import { Component, OnInit,ViewChild } from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatSort} from '@angular/material/sort';\nimport {MatPaginator} from '@angular/material/paginator';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CommunityModalComponent } from '../community-modal/community-modal.component';\nimport { DataService } from '../../../services/data.service';\nimport { environment } from '../.../../../../../environments/environment';\n\nexport interface PeriodicElement {\n  CommunityName: string;\n  Location: string;\n  BuilderInCommunity: string;\n  Status: string;\n  CommunityId: string;\n  position:number;\n  Operations:string; \n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1,CommunityName: 'Hydrogen',Location:'jobbe',BuilderInCommunity:'abc',Status:'vijaynagar',CommunityId:'synextic',Operations:''},\n \n];\n\n@Component({\n  selector: 'fp-community',\n  templateUrl: './community.component.html',\n  styleUrls: ['./community.component.scss']\n})\nexport class CommunityComponent implements OnInit {\n\n  displayedColumns: string[] = ['community_name', 'community_location', 'status','community_builders_count','action'];\n\n  dataSource = new MatTableDataSource<PeriodicElement>();\n\n  constructor(public dialog: MatDialog,private dataService:DataService) {}\n\n  @ViewChild(MatSort) sort:MatSort;\n  @ViewChild(MatPaginator) paginator:MatPaginator;\n  ngOnInit(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator=this.paginator;\n    this.dataService.login('mb@gmail.com','11111111').subscribe(result => {\n      console.log(\"result....\",result);\n      localStorage.setItem(\"IFPTOken\",result['access_token']);\n       this.getAllCommnuties();\n     });\n  }\n\n  getAllCommnuties(){\n    let getCommunityUrl = environment.builderBaseUrl+\"community/get-all-communities\";\n    this.dataService.getAll(getCommunityUrl).subscribe(result => {\n      console.log(\"result....\",result);\n      this.dataSource = result;\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator=this.paginator;\n     });\n  }\n\n  applyFilter(filterValue:string){\n    this.dataSource.filter=filterValue.trim().toLowerCase();\n  }\n\n  openDialog(){\n    const dialogRef = this.dialog.open(CommunityModalComponent, {\n      width: '250px',\n      data: {\n      community_location: \"\",\n      community_name: \"\",\n      status: \"\"}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      this.getAllCommnuties();\n\n    });\n\n  }\n\n}\n","<!-- <app-layout>\n    <mat-toolbar class=\"page-header\" role=\"heading\">\n        <h1>Tables</h1>\n      </mat-toolbar>\n    \n      <div class=\"tables-wrapper\">\n          dddddddddd\n      </div>\n    \n      <app-footer></app-footer>\n    <div class=\"workarea\">\n        <div class=\"dashboard_card\">\n            <h2>Community Details</h2>\n    \n            <div class=\"\">\n                <div class=\"builder_btn\">\n                    <button mat-flat-button color=\"primary\" (click)=\"openDialog()\">Add Community</button>\n                </div>\n            </div>\n            <mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">\n    \n                <ng-container matColumnDef=\"community_name\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> Community Name </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.community_name}} </mat-cell>\n                </ng-container>\n    \n                <ng-container matColumnDef=\"community_location\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> Community Location </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.community_location}} </mat-cell>\n                </ng-container>\n    \n                <ng-container matColumnDef=\"status\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> Status </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.status}} </mat-cell>\n                </ng-container>\n    \n                <ng-container matColumnDef=\"community_builders_count\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> Community Builders Count </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.community_builders_count}} </mat-cell>\n                </ng-container>\n    \n                <ng-container matColumnDef=\"action\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> Action </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">  <button mat-flat-button color=\"primary\" (click)=\"openDialog()\"><span class=\"material-icons\">\n                        create\n                        </span></button>\n                        <button mat-flat-button color=\"warn\"><span class=\"material-icons\">\n                            delete_forever\n                            </span></button>\n                    </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n            </mat-table>\n            <mat-paginator [pageSizeOptions]=\"[5,10,15]\" showFirstLastButtons></mat-paginator>\n        </div>\n    </div>\n</app-layout>  -->\n\n\naaaaa","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n\n@Component({\n  selector: 'app-dashboard-page',\n  templateUrl: './dashboard-page.component.html',\n  styleUrls: ['./dashboard-page.component.scss']\n})\nexport class DashboardPageComponent {\n \n\n  constructor() {\n    \n  }\n}\n"],"sourceRoot":"webpack:///"}