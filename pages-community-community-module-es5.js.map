{"version":3,"sources":["webpack:///src/app/pages/community/community-modal/community-modal.component.ts","webpack:///src/app/pages/community/community-routing.module.ts","webpack:///src/app/pages/community/community.module.ts","webpack:///src/app/pages/community/community/community.component.ts","webpack:///src/app/pages/community/community/community.component.html","webpack:///src/app/pages/community/containers/dashboard-page/dashboard-page.component.ts"],"names":["CommunityModalComponent","dialogRef","data","dataService","communityData","community_location","community_name","status","url","builderBaseUrl","addCommunity","subscribe","result","console","log","close","selector","templateUrl","styleUrls","routes","path","component","CommunityRoutingModule","forChild","imports","exports","CommunityModule","declarations","entryComponents","ELEMENT_DATA","position","CommunityName","Location","BuilderInCommunity","Status","CommunityId","Operations","CommunityComponent","dialog","displayedColumns","dataSource","sort","paginator","login","localStorage","setItem","getAllCommnuties","getCommunityUrl","getAll","filterValue","filter","trim","toLowerCase","open","width","afterClosed","DashboardPageComponent"],"mappings":"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","file":"pages-community-community-module-es5.js","sourcesContent":["\nimport { Component, OnInit, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { DataService } from '../../../services/data.service';\nimport { environment } from '../.../../../../../environments/environment';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'fp-community-modal',\n  templateUrl: './community-modal.component.html',\n  styleUrls: ['./community-modal.component.scss']\n})\nexport class CommunityModalComponent implements OnInit {\n\n  communityData = {\n    community_location: \"aa\",\n    community_name: \"aa\",\n    status: \"\"\n  };\n  \n  constructor(\n    public dialogRef: MatDialogRef<CommunityModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,private dataService:DataService) {\n      this.communityData = data;\n    }\n\n  ngOnInit(): void {\n    \n  }\n\n  onNoClick(): void {\n    \n    let url = environment.builderBaseUrl+\"community/create-community\";\n    this.dataService.addCommunity(url,this.communityData).subscribe(result => {\n      console.log(\"result....\",result);\n    });\n    this.dialogRef.close();\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CommunityComponent } from './community/community.component';\nimport { DashboardPageComponent } from './containers/dashboard-page/dashboard-page.component'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardPageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CommunityRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CommunityRoutingModule } from './community-routing.module';\nimport { CommunityComponent } from './community/community.component';\n\nimport { CommunityModalComponent } from './community-modal/community-modal.component'\nimport { DashboardPageComponent } from './containers/dashboard-page/dashboard-page.component'\n\n@NgModule({\n  declarations: [CommunityComponent,DashboardPageComponent],\n  imports: [\n    CommonModule,\n    CommunityRoutingModule,\n  ],\nentryComponents:[CommunityModalComponent],\n\n})\nexport class CommunityModule { }\n","import { Component, OnInit,ViewChild } from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatSort} from '@angular/material/sort';\nimport {MatPaginator} from '@angular/material/paginator';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CommunityModalComponent } from '../community-modal/community-modal.component';\nimport { DataService } from '../../../services/data.service';\nimport { environment } from '../.../../../../../environments/environment';\n\nexport interface PeriodicElement {\n  CommunityName: string;\n  Location: string;\n  BuilderInCommunity: string;\n  Status: string;\n  CommunityId: string;\n  position:number;\n  Operations:string; \n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1,CommunityName: 'Hydrogen',Location:'jobbe',BuilderInCommunity:'abc',Status:'vijaynagar',CommunityId:'synextic',Operations:''},\n \n];\n\n@Component({\n  selector: 'fp-community',\n  templateUrl: './community.component.html',\n  styleUrls: ['./community.component.scss']\n})\nexport class CommunityComponent implements OnInit {\n\n  displayedColumns: string[] = ['community_name', 'community_location', 'status','community_builders_count','action'];\n\n  dataSource = new MatTableDataSource<PeriodicElement>();\n\n  constructor(public dialog: MatDialog,private dataService:DataService) {}\n\n  @ViewChild(MatSort) sort:MatSort;\n  @ViewChild(MatPaginator) paginator:MatPaginator;\n  ngOnInit(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator=this.paginator;\n    this.dataService.login('mb@gmail.com','11111111').subscribe(result => {\n      console.log(\"result....\",result);\n      localStorage.setItem(\"IFPTOken\",result['access_token']);\n       this.getAllCommnuties();\n     });\n  }\n\n  getAllCommnuties(){\n    let getCommunityUrl = environment.builderBaseUrl+\"community/get-all-communities\";\n    this.dataService.getAll(getCommunityUrl).subscribe(result => {\n      console.log(\"result....\",result);\n      this.dataSource = result;\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator=this.paginator;\n     });\n  }\n\n  applyFilter(filterValue:string){\n    this.dataSource.filter=filterValue.trim().toLowerCase();\n  }\n\n  openDialog(){\n    const dialogRef = this.dialog.open(CommunityModalComponent, {\n      width: '250px',\n      data: {\n      community_location: \"\",\n      community_name: \"\",\n      status: \"\"}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      this.getAllCommnuties();\n\n    });\n\n  }\n\n}\n","<!-- <app-layout>\n    <mat-toolbar class=\"page-header\" role=\"heading\">\n        <h1>Tables</h1>\n      </mat-toolbar>\n    \n      <div class=\"tables-wrapper\">\n          dddddddddd\n      </div>\n    \n      <app-footer></app-footer>\n    <div class=\"workarea\">\n        <div class=\"dashboard_card\">\n            <h2>Community Details</h2>\n    \n            <div class=\"\">\n                <div class=\"builder_btn\">\n                    <button mat-flat-button color=\"primary\" (click)=\"openDialog()\">Add Community</button>\n                </div>\n            </div>\n            <mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">\n    \n                <ng-container matColumnDef=\"community_name\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> Community Name </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.community_name}} </mat-cell>\n                </ng-container>\n    \n                <ng-container matColumnDef=\"community_location\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> Community Location </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.community_location}} </mat-cell>\n                </ng-container>\n    \n                <ng-container matColumnDef=\"status\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> Status </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.status}} </mat-cell>\n                </ng-container>\n    \n                <ng-container matColumnDef=\"community_builders_count\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> Community Builders Count </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.community_builders_count}} </mat-cell>\n                </ng-container>\n    \n                <ng-container matColumnDef=\"action\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> Action </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">  <button mat-flat-button color=\"primary\" (click)=\"openDialog()\"><span class=\"material-icons\">\n                        create\n                        </span></button>\n                        <button mat-flat-button color=\"warn\"><span class=\"material-icons\">\n                            delete_forever\n                            </span></button>\n                    </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n            </mat-table>\n            <mat-paginator [pageSizeOptions]=\"[5,10,15]\" showFirstLastButtons></mat-paginator>\n        </div>\n    </div>\n</app-layout>  -->\n\n\naaaaa","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n\n@Component({\n  selector: 'app-dashboard-page',\n  templateUrl: './dashboard-page.component.html',\n  styleUrls: ['./dashboard-page.component.scss']\n})\nexport class DashboardPageComponent {\n \n\n  constructor() {\n    \n  }\n}\n"]}